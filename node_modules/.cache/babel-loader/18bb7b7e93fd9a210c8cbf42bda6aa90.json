{"ast":null,"code":"import _slicedToArray from \"/Users/Danny/Desktop/ReactApps/react-todo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Danny/Desktop/ReactApps/react-todo/src/components/ToDoItem.jsx\";\nimport React from \"react\";\n\nfunction ToDoItem(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isDone = _React$useState2[0],\n      setIsDone = _React$useState2[1];\n\n  function handleClick() {\n    setIsDone(function (prevValue) {\n      return !prevValue;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    onClick: handleClick,\n    style: {\n      textDecoration: isDone ? \"line-through\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, props.text);\n}\n\nexport default ToDoItem;","map":{"version":3,"sources":["/Users/Danny/Desktop/ReactApps/react-todo/src/components/ToDoItem.jsx"],"names":["React","ToDoItem","props","useState","isDone","setIsDone","handleClick","prevValue","textDecoration","text"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,wBAA4BF,KAAK,CAACG,QAAN,CAAe,KAAf,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AAEA,WAASC,WAAT,GAAuB;AACnBD,IAAAA,SAAS,CAAC,UAACE,SAAD,EAAe;AACrB,aAAO,CAACA,SAAR;AACH,KAFQ,CAAT;AAGH;;AAED,sBACI;AAAI,IAAA,OAAO,EAAED,WAAb;AAA0B,IAAA,KAAK,EAAE;AAAEE,MAAAA,cAAc,EAAEJ,MAAM,GAAG,cAAH,GAAoB;AAA5C,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwFF,KAAK,CAACO,IAA9F,CADJ;AAIH;;AAED,eAAeR,QAAf","sourcesContent":["import React from \"react\";\n\nfunction ToDoItem(props) {\n\n    const [isDone, setIsDone] = React.useState(false);\n\n    function handleClick() {\n        setIsDone((prevValue) => {\n            return !prevValue;\n        })\n    }\n\n    return (\n        <li onClick={handleClick} style={{ textDecoration: isDone ? \"line-through\" : \"none\" }}>{props.text}</li>\n    )\n\n}\n\nexport default ToDoItem;"]},"metadata":{},"sourceType":"module"}